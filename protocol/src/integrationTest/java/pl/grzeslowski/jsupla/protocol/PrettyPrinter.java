package pl.grzeslowski.jsupla.protocol;

import java.util.Arrays;
import java.util.List;

public class PrettyPrinter {

    public static final List<Integer> SUPLA_DS_CALL_REGISTER_DEVICE_G = Arrays.asList(
        // email
        32 + 32 + 32 + 32 + 32 + 32 + 32 + 32,
        //auth key,
        16,
        //guid
        16,
        //name
        32 + 32 + 32 + 32 + 32 + 32 + 9,
        // soft ver
        21,
        // server name
        32 + 32 + 1,
        //flags
        4,
        // manufacturerId
        2,
        //product id
        2,
        //channels count
        1
    );

    public static void main(String[] args) {
        printBytesPerLine(new byte[]{
                113, 64, 113, 46, 112, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -46, 69, -125, 101, -22, 124, 100, 34, -43, 60, -123, 5, -8, -79, -99, 97, 79, -23, 80, 72, -104, -37, -101, 37, -120, 32, 47, 76, -45, -9, 65, -15, 65, 85, 82, 65, 84, 79, 78, 32, 66, 111, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 52, 46, 48, 57, 46, 48, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 57, 50, 46, 49, 54, 56, 46, 49, 46, 51, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -48, 58, 0, 0, 18, 0, 1, 0, 11, 0, -44, 23, 0, 0, 0, 0, 2, 0, -92, 1, 0, 0, 0, 0, 1, 25, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 52, 8, 0, 0, -127, 0, 0, 1, 1, -44, 23, 0, 0, 0, 0, 2, 0, -92, 1, 0, 0, 0, 0, 1, 25, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 52, 8, 0, 0, -127, 0, 0, 1, 2, -44, 23, 0, 0, 0, 0, 2, 0, -92, 1, 0, 0, 0, 0, 1, 25, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 52, 8, 0, 0, -127, 0, 0, 1, 3, -44, 23, 0, 0, 0, 0, 2, 0, -92, 1, 0, 0, 0, 0, 1, 25, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 52, 8, 0, 0, -127, 0, 0, 1, 4, -44, 23, 0, 0, 0, 0, 2, 0, -92, 1, 0, 0, 0, 0, 1, 25, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 52, 8, 0, 0, -127, 0, 0, 1, 5, -44, 23, 0, 0, 0, 0, 2, 0, -92, 1, 0, 0, 0, 0, 1, 25, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 52, 8, 0, 0, -127, 0, 0, 1, 6, -44, 23, 0, 0, 0, 0, 2, 0, -92, 1, 0, 0, 0, 0, 1, 25, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 52, 8, 0, 0, -127, 0, 0, 1, 7, -44, 23, 0, 0, 0, 0, 2, 0, -92, 1, 0, 0, 0, 0, 1, 25, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 52, 8, 0, 0, -127, 0, 0, 1, 8, -38, 11, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 1, 8, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 113, -64, 3, 1, 9, 84, 11, 0, 0, 0, 0, 0, 4, -64, 3, 0, 0, 0, 0, 1, 8, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 10, 84, 11, 0, 0, 0, 0, 0, 8, -54, 3, 0, 0, 0, 0, 1, 8, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
            },
            SUPLA_DS_CALL_REGISTER_DEVICE_G);
    }

    public static void printBytesPerLine(byte[] byteArray, List<Integer> byteCountsPerLine) {
        int index = 0;

        for (int count : byteCountsPerLine) {
            // Ensure the count doesn't exceed the remaining bytes in the array
            int bytesToPrint = Math.min(count, byteArray.length - index);

            // Print each byte in the current line
            for (int i = 0; i < bytesToPrint; i++) {
//                System.out.printf("%02X ", byteArray[index + i]);
                System.out.printf("%3d, ", byteArray[index + i]);
            }
            System.out.println(); // New line after printing the required bytes

            // Move the index to the next part of the array
            index += count;

            // Stop if we reach the end of the array
            if (index >= byteArray.length) {
                break;
            }
        }

        for (; index < byteArray.length; index++) {
            System.out.printf("%3d, ", byteArray[index]);
        }
    }
}
