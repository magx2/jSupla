ext {
	slf4j_version = '1.7.25'
}

@SuppressWarnings("UnnecessaryQualifiedReference")
def prodProjects(Closure c) {
	allprojects { p ->
		if(!isTestProject(p)) { // only for non test projects
			c.delegate = p
			c.resolveStrategy = groovy.lang.Closure.DELEGATE_FIRST
			c(p)
		}
	}
}

private static boolean isTestProject(Project p) {
	p.name.toLowerCase().contains("test")
}

allprojects {
	repositories {
		mavenLocal()
		mavenCentral()
	}
}

allprojects {
	apply plugin: 'java'
	group = 'pl.grzeslowski.jSupla'
	version = '0.1.0-SNAPSHOT'
	sourceCompatibility = 1.8
}

// Add check style to all projects
prodProjects {
	apply plugin: 'checkstyle'
	tasks.withType(Checkstyle) {
		configFile = "${rootDir.path}/config/checkstyle/checkstyle.xml" as File
	}
}

// Add JaCoCO to all projects
prodProjects {
	apply plugin: "jacoco"
	tasks["build"].dependsOn "jacocoTestReport"
}

allprojects {
	dependencies {
		compile group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version

		testCompile 'junit:junit:4.12'
		testCompile 'org.assertj:assertj-core:3.8.0'
		testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.0.1'
}